{"ast":null,"code":"import { pokeapi } from \"@/api/pokeapi\";\nexport default {\n  name: \"PokemonSearch\",\n  data() {\n    return {\n      pokemonData: {},\n      pokemonID: \"\"\n    };\n  },\n  computed: {\n    formattedName() {\n      return this.pokemonData.name.charAt(0).toUpperCase() + this.pokemonData.name.slice(1);\n    }\n  },\n  methods: {\n    async searchPokemon() {\n      try {\n        const pokemonToFind = await fetch(`${pokeapi}/${this.pokemonID}`);\n        const pokemon = await pokemonToFind.json();\n        this.pokemonData = pokemon;\n        console.log(pokemon);\n        return pokemon;\n      } catch (error) {\n        alert(\"Pokemon was not found\");\n      }\n    },\n    formatStat(stat) {\n      return `${stat.stat.name}: ${stat.base_stat}`;\n    }\n  }\n};","map":{"version":3,"names":["pokeapi","name","data","pokemonData","pokemonID","computed","formattedName","charAt","toUpperCase","slice","methods","searchPokemon","pokemonToFind","fetch","pokemon","json","console","log","error","alert","formatStat","stat","base_stat"],"sources":["/home/ivy/Documentos/pokedex/src/components/PokemonSearch.vue"],"sourcesContent":["<template>\n    <section>\n      <div class=\"search\">\n        <label for=\"pokemonInput\">\n          <input\n            type=\"text\"\n            id=\"pokemonInput\"\n            placeholder=\"Name or ID\"\n            v-model=\"pokemonID\"\n          />\n          <button class=\"btn\" @click.prevent=\"searchPokemon\">Search</button>\n        </label>\n      </div>\n  \n      <div class=\"show\" v-if=\"Object.keys(pokemonData).length > 0\">\n        <div class=\"pokemonCard\">\n          <div class=\"card\">\n            <div class=\"nameImage\">\n              <h1 class=\"pokemonName\">{{ formattedName }}</h1>\n              <img :src=\"pokemonData.sprites.front_default\" :alt=\"formattedName\" />\n            </div>\n            <ul class=\"type\">\n              <h2>Type:</h2>\n              <li v-for=\"(type, index) in pokemonData.types\" :key=\"index\" :class=\"type.type.name\">\n                <span><h3>{{ type.type.name }}</h3></span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"data\">\n            <ul class=\"stats\">\n              <h1>Stats:</h1>\n              <li v-for=\"(stat, index) in pokemonData.stats\" :key=\"index\">\n                <span><h3>{{ formatStat(stat) }}</h3></span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </section>\n  </template>\n  \n  <script>\n  import { pokeapi } from \"@/api/pokeapi\";\n  \n  export default {\n    name: \"PokemonSearch\",\n  \n    data() {\n      return {\n        pokemonData: {},\n        pokemonID: \"\",\n      };\n    },\n  \n    computed: {\n      formattedName() {\n        return this.pokemonData.name.charAt(0).toUpperCase() + this.pokemonData.name.slice(1);\n      },\n    },\n  \n    methods: {\n      async searchPokemon() {\n        try {\n          const pokemonToFind = await fetch(`${pokeapi}/${this.pokemonID}`);\n          const pokemon = await pokemonToFind.json();\n          this.pokemonData = pokemon;\n          console.log(pokemon);\n          return pokemon;\n        } catch (error) {\n          alert(\"Pokemon was not found\");\n        }\n      },\n  \n      formatStat(stat) {\n        return `${stat.stat.name}: ${stat.base_stat}`;\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  @import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');\n  .search {\n    width: 100%;\n    max-width: none;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-right: 2rem;\n    background: #fbfbfb;\n    border-radius: 1rem;\n    min-height: 7rem;\n    height: auto;\n    margin: 15px;\n  }\n  \n  .btn {\n    padding: 5px 10px;\n    margin-top: 10px;\n    background-color: #da2535;\n    border-radius: 4px;\n    color: white;\n    text-align: center;\n    font-size: 1rem;\n    box-shadow: 0 4px 8px rgba(30, 60, 90, 0.2);\n    transition: all 0.3s;\n    border: none;\n    font-family: Arial, Helvetica, sans-serif;\n    cursor: pointer;\n  }\n  \n  .btn:hover {\n    background: #da2535;\n    transform: scale(1.1);\n  }\n  \n  .pokemonCard {\n    margin-top: 20px;\n    padding: 15px;\n    border-radius: 4px;\n    color: black;\n    text-align: center;\n    font-size: 1rem;\n    box-shadow: 0px 0px 24px 5px rgba(171,171,171,1);\n    font-family: 'Press Start 2P', cursive;\n    display: flex;\n    justify-content: space-between;\n    max-width: 70%;\n    background: linear-gradient(90deg, rgb(251, 251, 250) 41%, rgba(244,21,21,1) 65%);\n  }\n  \n  h1 {\n    font-size: 22px;\n  }\n  \n  h2 {\n    font-size: 18px;\n  }\n  \n  h3 {\n    font-size: 14px;\n  }\n  \n  .card {\n    max-width: 50%;\n    background: transparent;\n    flex: 1;\n    border: none;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .data {\n    max-width: 50%;\n    flex: 1;\n    color: rgb(241, 235, 235);\n    font-family: 'Press Start 2P', cursive;\n    font-size: 1rem;\n  }\n  \n  .list {\n    padding-top: 15px;\n    text-align: center;\n    display: inline-block;\n  }\n  \n  img {\n    max-width: 100%;\n  }\n  </style>\n  "],"mappings":"AA0CE,SAASA,OAAM,QAAS,eAAe;AAEvC,eAAe;EACbC,IAAI,EAAE,eAAe;EAErBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CAAC,CAAC;MACfC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACH,WAAW,CAACF,IAAI,CAACM,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAI,IAAI,CAACL,WAAW,CAACF,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC;IACvF;EACF,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,aAAY,GAAI,MAAMC,KAAK,CAAE,GAAEb,OAAQ,IAAG,IAAI,CAACI,SAAU,EAAC,CAAC;QACjE,MAAMU,OAAM,GAAI,MAAMF,aAAa,CAACG,IAAI,CAAC,CAAC;QAC1C,IAAI,CAACZ,WAAU,GAAIW,OAAO;QAC1BE,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;QACpB,OAAOA,OAAO;MAChB,EAAE,OAAOI,KAAK,EAAE;QACdC,KAAK,CAAC,uBAAuB,CAAC;MAChC;IACF,CAAC;IAEDC,UAAUA,CAACC,IAAI,EAAE;MACf,OAAQ,GAAEA,IAAI,CAACA,IAAI,CAACpB,IAAK,KAAIoB,IAAI,CAACC,SAAU,EAAC;IAC/C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}